// <auto-generated />

using System;
using AlfaBank.Core.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;

namespace AlfaBank.WebApi.Migrations
{
    [DbContext(typeof(SqlContext))]
    partial class SqlContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062");

            modelBuilder.Entity("AlfaBank.Core.Models.Card", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd();

                b.Property<string>("CardName")
                    .IsRequired();

                b.Property<string>("CardNumber")
                    .IsRequired()
                    .HasMaxLength(19);

                b.Property<int>("CardType");

                b.Property<int>("Currency");

                b.Property<DateTime>("DtOpenCard");

                b.Property<int>("UserId");

                b.Property<int>("ValidityYear");

                b.HasKey("Id");

                b.HasIndex("CardNumber");

                b.HasIndex("UserId");

                b.ToTable("Cards");

                b.HasData(
                    new
                    {
                        Id = 1,
                        CardName = "my salary",
                        CardNumber = "4083966267580714",
                        CardType = 2,
                        Currency = 0,
                        DtOpenCard = new DateTime(2017, 6, 21, 0, 0, 0, 0, DateTimeKind.Local),
                        UserId = 1,
                        ValidityYear = 3
                    },
                    new
                    {
                        Id = 2,
                        CardName = "my salary",
                        CardNumber = "6271197881674397",
                        CardType = 3,
                        Currency = 0,
                        DtOpenCard = new DateTime(2017, 6, 21, 0, 0, 0, 0, DateTimeKind.Local),
                        UserId = 1,
                        ValidityYear = 3
                    },
                    new
                    {
                        Id = 3,
                        CardName = "my debt",
                        CardNumber = "4083966485519163",
                        CardType = 2,
                        Currency = 2,
                        DtOpenCard = new DateTime(2017, 6, 21, 0, 0, 0, 0, DateTimeKind.Local),
                        UserId = 1,
                        ValidityYear = 3
                    },
                    new
                    {
                        Id = 4,
                        CardName = "for my family",
                        CardNumber = "5101264449620920",
                        CardType = 1,
                        Currency = 1,
                        DtOpenCard = new DateTime(2017, 6, 21, 0, 0, 0, 0, DateTimeKind.Local),
                        UserId = 1,
                        ValidityYear = 3
                    },
                    new
                    {
                        Id = 5,
                        CardName = "my salary",
                        CardNumber = "4083964697129640",
                        CardType = 2,
                        Currency = 0,
                        DtOpenCard = new DateTime(2017, 6, 21, 0, 0, 0, 0, DateTimeKind.Local),
                        UserId = 2,
                        ValidityYear = 3
                    },
                    new
                    {
                        Id = 6,
                        CardName = "my salary",
                        CardNumber = "6271190527962680",
                        CardType = 3,
                        Currency = 0,
                        DtOpenCard = new DateTime(2017, 6, 21, 0, 0, 0, 0, DateTimeKind.Local),
                        UserId = 2,
                        ValidityYear = 3
                    },
                    new
                    {
                        Id = 7,
                        CardName = "my debt",
                        CardNumber = "4083965831519208",
                        CardType = 2,
                        Currency = 2,
                        DtOpenCard = new DateTime(2017, 6, 21, 0, 0, 0, 0, DateTimeKind.Local),
                        UserId = 2,
                        ValidityYear = 3
                    },
                    new
                    {
                        Id = 8,
                        CardName = "for my family",
                        CardNumber = "5101263592852637",
                        CardType = 1,
                        Currency = 1,
                        DtOpenCard = new DateTime(2017, 6, 21, 0, 0, 0, 0, DateTimeKind.Local),
                        UserId = 2,
                        ValidityYear = 3
                    });
            });

            modelBuilder.Entity("AlfaBank.Core.Models.Transaction", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd();

                b.Property<string>("CardFromNumber");

                b.Property<int>("CardId");

                b.Property<string>("CardToNumber");

                b.Property<DateTime>("DateTime");

                b.Property<decimal>("Sum");

                b.HasKey("Id");

                b.HasIndex("CardId");

                b.ToTable("Transactions");

                b.HasData(
                    new
                    {
                        Id = 1,
                        CardId = 1,
                        CardToNumber = "4083966267580714",
                        DateTime = new DateTime(2019, 6, 21, 21, 2, 48, 829, DateTimeKind.Local).AddTicks(2740),
                        Sum = 10m
                    },
                    new
                    {
                        Id = 2,
                        CardId = 2,
                        CardToNumber = "6271197881674397",
                        DateTime = new DateTime(2019, 6, 21, 21, 2, 48, 829, DateTimeKind.Local).AddTicks(6630),
                        Sum = 10m
                    },
                    new
                    {
                        Id = 3,
                        CardId = 3,
                        CardToNumber = "4083966485519163",
                        DateTime = new DateTime(2019, 6, 21, 21, 2, 48, 829, DateTimeKind.Local).AddTicks(6670),
                        Sum = 0.1376651982378854625550660793m
                    },
                    new
                    {
                        Id = 4,
                        CardId = 4,
                        CardToNumber = "5101264449620920",
                        DateTime = new DateTime(2019, 6, 21, 21, 2, 48, 830, DateTimeKind.Local).AddTicks(4340),
                        Sum = 0.1595405232929164007657945118m
                    },
                    new
                    {
                        Id = 5,
                        CardId = 5,
                        CardToNumber = "4083964697129640",
                        DateTime = new DateTime(2019, 6, 21, 21, 2, 48, 830, DateTimeKind.Local).AddTicks(4350),
                        Sum = 10m
                    },
                    new
                    {
                        Id = 6,
                        CardId = 6,
                        CardToNumber = "6271190527962680",
                        DateTime = new DateTime(2019, 6, 21, 21, 2, 48, 830, DateTimeKind.Local).AddTicks(4370),
                        Sum = 10m
                    },
                    new
                    {
                        Id = 7,
                        CardId = 7,
                        CardToNumber = "4083965831519208",
                        DateTime = new DateTime(2019, 6, 21, 21, 2, 48, 830, DateTimeKind.Local).AddTicks(4370),
                        Sum = 0.1376651982378854625550660793m
                    },
                    new
                    {
                        Id = 8,
                        CardId = 8,
                        CardToNumber = "5101263592852637",
                        DateTime = new DateTime(2019, 6, 21, 21, 2, 48, 830, DateTimeKind.Local).AddTicks(4370),
                        Sum = 0.1595405232929164007657945118m
                    });
            });

            modelBuilder.Entity("AlfaBank.Core.Models.User", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd();

                b.Property<DateTime?>("Birthday");

                b.Property<string>("Firstname");

                b.Property<string>("Password")
                    .IsRequired();

                b.Property<string>("Surname");

                b.Property<string>("UserName")
                    .IsRequired();

                b.HasKey("Id");

                b.HasIndex("UserName");

                b.ToTable("Users");

                b.HasData(
                    new
                    {
                        Id = 1,
                        Password =
                            "AQAAAAEAACcQAAAAEMIIwi1XzayiOoJ+kTDVTmiGQx0ikUcE78oVHg2qxz4xo/WXUz33uYJUaJ9mmJt52A==",
                        UserName = "alice@alfabank.ru"
                    },
                    new
                    {
                        Id = 2,
                        Password =
                            "AQAAAAEAACcQAAAAEOLUkP2taPnRbqiXbS6jjQKlbl/gfDehjMS1Pi9XIo5SjDt7qlU44AKMPXzXht2HBw==",
                        UserName = "bob@alfabank.ru"
                    });
            });

            modelBuilder.Entity("AlfaBank.Core.Models.Card", b =>
            {
                b.HasOne("AlfaBank.Core.Models.User", "User")
                    .WithMany("Cards")
                    .HasForeignKey("UserId")
                    .OnDelete(DeleteBehavior.Cascade);
            });

            modelBuilder.Entity("AlfaBank.Core.Models.Transaction", b =>
            {
                b.HasOne("AlfaBank.Core.Models.Card", "Card")
                    .WithMany("Transactions")
                    .HasForeignKey("CardId")
                    .OnDelete(DeleteBehavior.Cascade);
            });
#pragma warning restore 612, 618
        }
    }
}